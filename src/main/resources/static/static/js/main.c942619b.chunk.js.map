{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","assets/AceTask.gif","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/ProjectBoard/ProjectTasks/ViewProjectTask.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","style","marginTop","projectIdentifier","start_date","end_date","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","errors","onChange","onSubmit","nextProps","nextContext","setState","e","target","name","value","preventDefault","newProject","width","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevtools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","getProjectTask","backlog_id","pt_id","ProjectTask","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","protoTypes","PropTypes","func","isRequired","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","console","log","UpdateProjectTask","create_At","updateProjectTask","patch","Landing","src","logo","alt","aria-hidden","Register","newUser","username","password","confirmPassword","createNewUser","object","Login","LoginRequest","login","setItem","decoded","jwt_decode","SecuredRoute","component","otherProps","render","ViewProjectTask","priorityStr","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c942619b.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog actions\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER=\"SET-CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n  await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are You sure ? This will delete project and all the data related to it .\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {deleteProject} from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n    onDeleteClick = (id) => {\n        this.props.deleteProject(id);\n    };\n\n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-dark mb-3 text-white border-secondary border-4\">\n                    <div className=\"row\">\n                        <div className=\"col-3 ml-5 border text-left\">\n                            <p style={{marginTop: \"20px\"}}>Project Id : {project.projectIdentifier}</p>\n                            <p>Start Date : {project.start_date}</p>\n                            <p>Expected End Date : {project.end_date}</p>\n                        </div>\n                        <div className=\"col-lg-5 col-md-4 col-8 border\">\n                            <h3 style={{marginTop: \"30px\"}}>{project.projectName}</h3>\n                            <p>{project.description}</p>\n\n                        </div>\n                        <div className=\"col-md-3 ml-auto border-right\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-lg-5\"> Project Board</i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-lg-2\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n\n                                <li\n                                    className=\"list-group-item delete\"\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        project.projectIdentifier\n                                    )}\n                                >\n                                    <i className=\"fa fa-minus-circle pr-lg-5\"> Delete Project</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {deleteProject})(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddProjectMaterial from \"./AddProjectMaterial\";\nimport { Add } from \"@material-ui/icons\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <div className=\"text-center mb-0\">\n        <Link to={\"/addProject\"} className=\"btn btn-outline-primary \">\n          Create new project\n        </Link>\n        {/*<AddProjectMaterial/>*/}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport { PropTypes } from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const projects = this.props.project.projects;\n    return (\n      <div>\n        {/*Dashboard Component (Project Item included) */}\n\n        <CreateProjectButton />\n        <br/>\n\n        <div className=\"projects\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\" text-center\">Project Dashboard</h1>\n\n                <hr />\n                {projects.map((project) => (\n                  <ProjectItem key={project.id} project={project}/>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      /*{/!*  End of Dashboard Component *!/}*/\n    );\n  }\n}\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    }else {\n        delete axios.defaults.headers.common[\"Authorization\"]\n    }\n}\nexport default setJWTToken;","import axios from \"axios\";\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\"\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    } catch (error) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data\n        })\n    }\n}\nexport const login = LoginRequest => async dispatch => {\n    try {\n\n        //post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        //extract token from res.data\n        const {token} = res.data\n        //store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token)\n        //set our token header ***\n        setJWTToken(token)\n        //decode token on React\n        const decoded = jwt_decode(token);\n        //dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n\nexport const logout=()=>dispatch=>{\n    localStorage.removeItem(\"jwtToken\")\n    setJWTToken(false)\n    dispatch({\n        type:SET_CURRENT_USER,\n        payload:{}\n    })\n}","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {logout} from \"../../actions/securityActions\";\nimport \"./Header.css\"\n\n\nclass Header extends Component {\n\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n\n        const {validToken, user} = this.props.security\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\" nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"btn btn-group-lg btn-outline-light mr-2 \" to={\"/dashboard\"}>\n                            <i className=\"fas fa-user-circle mr-1\"/>{user.fullName}\n\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className=\"btn btn-group-sm btn-outline-light mr-2 \" to={\"/logout\"}  onClick={this.logout.bind(this)}>\n\n                            <i className=\"fas fa-sign-out-alt\"/> Log Out\n\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"btn btn-group-sm btn-outline-light border border-light  mr-2 \" to={\"/register\"}>\n\n                          Sign Up\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className=\"btn btn-group-sm btn-outline-light border-light mr-2 \" to={\"/login\"} >\n                            Log In\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated\n        } else {\n            headerLinks = userIsNotAuthenticated\n        }\n\n\n        return (\n            //Navbar Component\n            <div>\n                <nav className=\"navbar navbar-expand-sm navbar-dark mb-4\">\n                    <div className=\"container\">\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            AceTask - A Project Management Tool\n                        </Link>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#mobile-nav\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        {headerLinks}\n\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps, {logout})(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n                <h1 className=\"text-center\">Create new project</h1>\n                <hr className={\"mb-2 pb-1 mx-auto\"} width={\"70%\"}/>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name={\"projectName\"}\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className={\"invalid-feedback\"}>\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name={\"projectIdentifier\"}\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className={\"invalid-feedback\"}>\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name={\"description\"}\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                        <div className={\"invalid-feedback\"}>\n                          {errors.description}\n                        </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <div className=\"form-group text-center\">\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                  </div>\n\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security:securityReducer\n\n});\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevtools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevtools) {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevtools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n        )\n    );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n              <h1 className=\"text-center\">Update Project</h1>\n              <hr className={\"mb-2 pb-1 mx-auto\"} width={\"70%\"}/>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import axios from \"axios\";\nimport {\n  DELETE_PROJECT_TASK,\n  GET_BACKLOG,\n  GET_ERRORS,\n  GET_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: e.response.data,\n    });\n  }\n};\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (e) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: e.response.data,\n    });\n  }\n};\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting Project Task ${pt_id} , this action cannot be undone `\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-dark text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div>\n        {/*  SAMPLE PROJECT TASK STARTS HERE*/}\n        <div className=\"card mb-1 bg-light\">\n          <div className={`card-header text-primary ${priorityClass}`}>\n            Task Id : <b>{project_task.projectSequence} </b> &nbsp;&nbsp;&nbsp;&nbsp; Priority :{\" \"}\n            <b>{priorityString}</b>\n          </div>\n          <div className=\"card-body bg-light\">\n            <h5 className=\"card-title\">{project_task.summary}</h5>\n            <p className=\"card-text text-truncate \">\n              {project_task.acceptanceCriteria}\n            </p>\n\n            <Link\n                to={`/getProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n                className=\"btn btn-outline-dark\"\n            >\n              <i className=\"fas fa-eye\"/> View\n            </Link>\n            &nbsp;&nbsp;\n\n            <Link\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n              className=\"btn btn-outline-dark\"\n            >\n              <i className=\"fas fa-edit\"/> Update\n            </Link>\n\n            &nbsp;&nbsp;\n            <button\n              className=\"btn btn-outline-dark \"\n              onClick={this.onDeleteClick.bind(\n                this,\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )}\n            >\n              <i className=\"fas fa-trash\"/> Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.protoTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport './Backlog.css'\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n    }\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n    }\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"demo pt-2 text-light\">\n                <h4>\n                  To Do\n                </h4>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"pt-2 bg-light text-primary\">\n                <h4>\n                  In Progress\n                </h4>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"pt-2 bg-light text-primary\">\n                <h4>\n                  Done\n                </h4>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getBacklog} from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n    //constructor to handle errors\n    constructor() {\n        super();\n        this.state = {\n            errors: {},\n        };\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length < 1) {\n                if (errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    )\n                } else if (errors.projectIdentifier) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectIdentifier}\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            No Project Tasks on this board\n                        </div>\n                    );\n                }\n            } else {\n                return <Backlog project_tasks_prop={project_tasks}/>;\n            }\n        };\n\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-outline-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br/>\n                <hr/>\n                {BoardContent}\n            </div>\n        );\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    backlog: state.backlog,\n    errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n    console.log(newTask);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const {errors}=this.state\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-outline-dark\">\n                <i className=\"fa fa-arrow-circle-left font-weight-bold\" > Back to project board</i>\n              </Link>\n              <h1 className=\"text-center mt-3\">Add project Task</h1>\n              <hr className={\"mb-2 pb-1 mx-auto\"} width={\"70%\"}/>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\",{\n                        \"is-invalid\":errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                    {\n                        errors.summary &&(\n                            <div className={\"invalid-feedback\"}>{errors.summary}</div>\n                        )\n                    }\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Project Task Description\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n        this.state.projectIdentifier,\n        this.state.projectSequence,\n        UpdateProjectTask,\n        this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n        <div className=\"add-PBI\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n                <Link\n                    to={`/projectBoard/${this.state.projectIdentifier}`}\n                    className=\"btn btn-outline-dark\"\n                >\n                  <i className=\"fa fa-arrow-circle-left font-weight-bold\" > Back to project board</i>\n                </Link>\n                <h1 className=\"text-center mt-3\">Update project Task</h1>\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className={classnames(\"form-control form-control-lg\", {\n                          \"is-invalid\": errors.summary\n                        })}\n                        name=\"summary\"\n                        placeholder=\"Project Task summary\"\n                        value={this.state.summary}\n                        onChange={this.onChange}\n                    />\n                    {errors.summary && (\n                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                  </div>\n                  <h6>Due Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                        type=\"date\"\n                        className=\"form-control form-control-lg\"\n                        name=\"dueDate\"\n                        value={this.state.dueDate}\n                        onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <select\n                        className=\"form-control form-control-lg\"\n                        name=\"priority\"\n                        value={this.state.priority}\n                        onChange={this.onChange}\n                    >\n                      <option value={0}>Select Priority</option>\n                      <option value={1}>High</option>\n                      <option value={2}>Medium</option>\n                      <option value={3}>Low</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <select\n                        className=\"form-control form-control-lg\"\n                        name=\"status\"\n                        value={this.state.status}\n                        onChange={this.onChange}\n                    >\n                      <option value=\"\">Select Status</option>\n                      <option value=\"TO_DO\">TO DO</option>\n                      <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                      <option value=\"DONE\">DONE</option>\n                    </select>\n                  </div>\n\n                  <input\n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","export default __webpack_public_path__ + \"static/media/AceTask.f4da3c46.gif\";","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport logo from \"../../assets/AceTask.gif\"\nimport '../../../src/App.css'\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                {/*<h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>*/}\n                                <div>\n                                    <img src={logo} width={\"60%\"} alt=\"Logo\" />\n                                </div>\n                                <p className=\"lead text-dark\">\n                                    Create your account to join active projects or start your own\n                                </p>\n                                <hr/>\n                                <Link className={\"btn btn-lg btn-outline-success border  border-success ml-5\"} to={\"/register\"}>\n                                    <i className='fas fa-user-plus'>  Create new account</i>\n                                </Link>\n                                <Link className={\"btn btn-lg btn-outline-dark ml-5\"} to={\"/login\"}>\n                                    Log In <i className='\tfas fa-sign-in' aria-hidden=\"true\"> </i>\n                                </Link>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired,\n\n}\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(Landing);","import React, {Component} from 'react';\nimport {createNewUser} from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"username\": \"\",\n            \"fullName\": \"\",\n            \"password\": \"\",\n            \"confirmPassword\": \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n                            <h1 className=\" text-center\">Create a new account</h1>\n                            <p className=\"lead text-center\">It's quick and easy</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.fullName\n                                    })} placeholder=\"Full Name\"\n                                           name=\"fullName\"\n                                           value={this.state.fullName}\n                                           onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.fullName && (\n                                            <div className={\"invalid-feedback\"}>{errors.fullName}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.username\n                                    })}\n                                           placeholder=\"Email Address (User name)\" name=\"username\"\n                                           value={this.state.username}\n                                           onChange={this.onChange}\n                                    />{\n                                    errors.username && (\n                                        <div className={\"invalid-feedback\"}>{errors.username}</div>\n                                    )\n                                }\n\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.password\n                                    })}\n                                           placeholder=\"Password\" name=\"password\"\n                                           value={this.state.password}\n                                           onChange={this.onChange}\n                                    />{\n                                    errors.password && (\n                                        <div className={\"invalid-feedback\"}>{errors.password}</div>\n                                    )\n                                }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.confirmPassword\n                                    })\n                                    }\n                                           placeholder=\"Confirm Password\"\n                                           name=\"confirmPassword\"\n                                           value={this.state.confirmPassword}\n                                           onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.confirmPassword && (\n                                            <div className={\"invalid-feedback\"}>{errors.confirmPassword}</div>\n                                        )\n                                    }\n                                </div>\n                                <input type=\"submit\" value={\"Create new account\"} className=\"font-weight-bold btn btn-success pt-2 pb-2 pl-4 pr-4 mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nRegister.protoTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n})\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../actions/securityActions\";\nimport classnames from \"classnames\"\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto pb-5 pt-3 pr-4 pl-4 mt-2 border border-light shadow rounded\">\n                            <h1 className=\" text-center\">Log into AceTask</h1>\n                            <p className=\"lead text-center\">If you have created account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.username && (\n                                            <div className={\"invalid-feedback\"}>{errors.username}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.password && (\n                                            <div className={\"invalid-feedback\"}>{errors.password}</div>\n                                        )\n                                    }\n                                </div>\n                                <input type=\"submit\" value={\"Log In\"} className=\"font-weight-bold btn btn-primary pt-2 pb-2 pl-4 pr-4 mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {login}\n)(Login);\n\n","import React, {Component} from 'react'\n\nimport {Route, Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\n    <Route {...otherProps} render={props => security.validToken === true ? (<Component {...props}/>) :\n        (<Redirect to={\"login\"}/>)\n    }/>\n);\n\nSecuredRoute.protoTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(SecuredRoute)","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {getProjectTask,} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ViewProjectTask extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n\n    }\n\n    componentDidMount() {\n        const {backlog_id, pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        });\n    }\n\n\n    render() {\n\n        const { project_task } = this.props;\n\n        let priorityStr;\n\n        if (project_task.priority === 1) {\n            priorityStr = \"HIGH\";\n        }\n        if (project_task.priority === 2) {\n            priorityStr = \"MEDIUM\";\n        }\n        if (project_task.priority === 3) {\n            priorityStr = \"LOW\";\n        }\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6 m-auto pb-5 pt-4 pr-4 pl-4 mt-3 border border-light shadow rounded\">\n                            <Link\n                                to={`/projectBoard/${this.state.projectIdentifier}`}\n                                className=\"btn btn-outline-dark\"\n                            >\n                                <i className=\"fa fa-arrow-circle-left font-weight-bold\"> Back to project board</i>\n                            </Link>\n                            <h1 className=\"text-center mt-3\">Project Task Detail :</h1>\n                            <p className=\"lead text-center\">\n\n                                <table className=\"table table-striped table-bordered\">\n\n                                    <tbody>\n                                    <tr>\n\n                                        <td>Project Id</td>\n                                        <td>{this.state.projectIdentifier}</td>\n                                    </tr>\n                                    <tr>\n\n                                        <td>Task Id</td>\n                                        <td>{this.state.projectSequence}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>Summary</td>\n                                        <td>{this.state.summary}</td>\n                                    </tr>\n                                    <tr>\n\n                                        <td>Priority</td>\n                                        <td>{priorityStr}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>Due Date</td>\n                                        <td>{this.state.dueDate}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>Description</td>\n                                        <td>{this.state.acceptanceCriteria}</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </p>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {getProjectTask}\n)(ViewProjectTask);","import \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport ViewProjectTask from \"./components/ProjectBoard/ProjectTasks/ViewProjectTask\";\n\n\nconst jwtToken=localStorage.jwtToken\n\nif(jwtToken){\n    setJWTToken(jwtToken)\n    const decode_jwtToken=jwt_decode(jwtToken);\n\n    store.dispatch({\n        type:SET_CURRENT_USER,\n        payload:decode_jwtToken\n    });\n\n    const currentTime=Date.now()/1000\n    if(decode_jwtToken.exp<currentTime){\n        store.dispatch(logout())\n        window.location.href=\"/\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Header/>\n                    {\n                        //Public Routes\n                    }\n                    <Route exact path={\"/\"} component={Landing}/>\n                    <Route exact path={\"/register\"} component={Register}/>\n                    <Route exact path={\"/login\"} component={Login}/>\n                    {\n\n\n                    }\n                    <Switch>\n                    <SecuredRoute exact path={\"/dashboard\"} component={Dashboard}/>\n                    <SecuredRoute exact path={\"/addProject\"} component={AddProject}/>\n                    <SecuredRoute exact path={\"/updateProject/:id\"} component={UpdateProject}/>\n                    <SecuredRoute exact path={\"/projectBoard/:id\"} component={ProjectBoard}/>\n                    <SecuredRoute exact path={\"/addProjectTask/:id\"} component={AddProjectTask}/>\n                    <SecuredRoute exact path={\"/updateProjectTask/:backlog_id/:pt_id\"} component={UpdateProjectTask}/>\n                    <SecuredRoute exact path={\"/getProjectTask/:backlog_id/:pt_id\"} component={ViewProjectTask}/>\n                    </Switch>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}